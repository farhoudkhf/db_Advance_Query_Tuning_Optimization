--------- Session A

-- Letâ€™s create a new table called bank_accounts
CREATE TABLE bank_accounts (
    id INT GENERATED BY DEFAULT AS IDENTITY,
    name TEXT NOT NULL,
    balance INT NOT NULL,
    PRIMARY KEY(id)
);

-- Insert values to the table
INSERT INTO bank_accounts(name, balance) 
VALUES('Charlie', 10000);

INSERT INTO bank_accounts(name, balance)
VALUES('Dora', 25000);

SELECT * FROM bank_accounts;


-- PostgreSQL inserted a new row into the accounts table immediately. 


-- IMPORTANT: Click on the drop down next to the "run" button that we use to run commands and show that "Auto commit"
-- is checked

-------------------------------------------------------------------------------------------------------------
-- Part 2 ---------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-- Performing a sequence of steps that needs to be done atomically in a transaction
-- A group of statements surrounded by BEGIN and COMMIT is sometimes called a transaction block.
-- Paste all the commands for Session A in and execute them in one go (no need to execute one-by-one)

----- Session A

BEGIN;

UPDATE bank_accounts
SET balance = balance - 100
WHERE name = 'Charlie';

UPDATE bank_accounts
SET balance = balance + 100
WHERE name = 'Dora';

COMMIT;

SELECT * FROM bank_accounts;


-- Note that the amounts have been debited and credited atomically

-- "Charlie" 9900
-- "Dora"  25100
